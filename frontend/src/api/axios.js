import axios from 'axios'
import { toast } from 'react-toastify'

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
const axiosInstance = axios.create({
  baseURL: '/api',
  headers: {
    'Content-Type': 'application/json',
    'Accept': 'application/json'
  }
})

// Interceptor –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞, project_id –∏ context_id –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏
axiosInstance.interceptors.request.use(
  (config) => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ localStorage
    const token = localStorage.getItem('token')
    if (token) {
      config.headers['Authorization'] = `Bearer ${token}`
    }

    // –ü–æ–ª—É—á–∞–µ–º project_id –∏–∑ localStorage
    const selectedProjectId = localStorage.getItem('selectedProjectId')
    if (selectedProjectId) {
      config.headers['X-Project-Id'] = selectedProjectId
    }

    // –ü–æ–ª—É—á–∞–µ–º context_id –∏–∑ localStorage
    const selectedContextId = localStorage.getItem('selectedContextId')
    if (selectedContextId) {
      config.headers['X-Context-Id'] = selectedContextId
    }

    return config
  },
  (error) => {
    return Promise.reject(error)
  }
)

// Interceptor –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤
axiosInstance.interceptors.response.use(
  (response) => {
    return response
  },
  (error) => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
    if (error.response?.status === 401) {
      console.error('Unauthorized - redirecting to login')
      // –£–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      localStorage.removeItem('token')
      localStorage.removeItem('user')
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
      if (window.location.pathname !== '/login') {
        window.location.href = '/login'
      }
    } else if (error.response?.status === 403) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ 403 - –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤)
      const message = error.response?.data?.message || '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è'
      toast.error(message, {
        position: 'top-center',
        autoClose: 5000,
        hideProgressBar: false,
        closeOnClick: true,
        pauseOnHover: true,
        draggable: true,
        icon: 'üö´'
      })
      console.error('Forbidden:', message)
    }
    return Promise.reject(error)
  }
)

export default axiosInstance

